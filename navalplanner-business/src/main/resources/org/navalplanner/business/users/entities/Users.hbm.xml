<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.navalplanner.business.users.entities"
    default-access="field">

    <!--
        IMPORTANT: The default name for User's table ("User") is not valid
        for some databases (e.g. PostgreSQL).
    -->
    <class name="User" table="NAVAL_USER">
        <!--
            IMPORTANT: type="long" must be specified (otherwise,
            Hibernate infers type="integer".
        -->
        <id name="id" access="property" type="long">
            <generator class="hilo">
                <param name="max_lo">100</param>
            </generator>
        </id>
        <version name="version" access="property" type="long" />
        <property name="loginName" not-null="true" unique="true"/>
        <property name="password" not-null="true"/>
        <property name="email"/>
        <property name="disabled"/>

        <!-- Index created in a database-object section -->
        <set name="roles" table="USER_ROLES">
            <key column="userId"/>
            <element>
                <type name="org.hibernate.type.EnumType">
                    <param name="enumClass">org.navalplanner.business.users.entities.UserRole</param>
                    <!-- 12 is java.sql.Types.VARCHAR -->
                    <param name="type">12</param>
                </type>
            </element>
        </set>

        <!-- Index created in a database-object section -->
        <set name="profiles" table="USER_PROFILES">
            <key column="USER_ID"/>
            <many-to-many column="PROFILE_ID"
                class="org.navalplanner.business.users.entities.Profile"/>
        </set>
    </class>

    <class name="Profile" table="NAVAL_PROFILE">
        <id name="id" access="property" type="long">
            <generator class="hilo">
                <param name="max_lo">100</param>
            </generator>
        </id>
        <version name="version" access="property" type="long" />

        <property name="profileName" not-null="true" unique="true"/>

        <!-- Index created in a database-object section -->
        <set name="roles" table="PROFILE_ROLES">
            <key column="profileId"/>
            <element>
                <type name="org.hibernate.type.EnumType">
                    <param name="enumClass">org.navalplanner.business.users.entities.UserRole</param>
                    <!-- 12 is java.sql.Types.VARCHAR -->
                    <param name="type">12</param>
                </type>
            </element>
        </set>
    </class>

    <class name="OrderAuthorization" table="ORDER_AUTHORIZATION">
        <id name="id" access="property" type="long">
            <generator class="hilo">
                <param name="max_lo">100</param>
            </generator>
        </id>

        <discriminator column="ORDER_AUTHORIZATION_SUBCLASS" type="string"/>

        <version name="version" access="property" type="long" />

        <property name="authorizationType" not-null="true">
            <type name="org.hibernate.type.EnumType">
                <param name="enumClass">org.navalplanner.business.users.entities.OrderAuthorizationType</param>
                <!-- 12 is java.sql.Types.VARCHAR -->
                <param name="type">12</param>
            </type>
        </property>

        <many-to-one name="order" class="org.navalplanner.business.orders.entities.Order" column="ORDER_ID" />

        <subclass name="UserOrderAuthorization" discriminator-value="USER">
            <many-to-one name="user" class="User" column="USER_ID" />
        </subclass>

        <subclass name="ProfileOrderAuthorization" discriminator-value="PROFILE">
            <many-to-one name="profile" class="Profile" column="PROFILE_ID" />
        </subclass>

    </class>

    <!-- Index to boost the search of roles inside users -->
    <database-object>
        <create>CREATE INDEX idx_User_on_UserRoles ON USER_ROLES (userId)</create>
        <drop>DROP INDEX idx_User_on_UserRoles</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQLDialect" />
        <dialect-scope name="org.hibernate.dialect.MySQLInnoDBDialect" />
    </database-object>

    <!-- Index to boost the search of roles inside profiles -->
    <database-object>
        <create>CREATE INDEX idx_Profile_on_ProfileRoles ON PROFILE_ROLES (profileId)</create>
        <drop>DROP INDEX idx_Profile_on_ProfileRoles</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQLDialect" />
        <dialect-scope name="org.hibernate.dialect.MySQLInnoDBDialect" />
    </database-object>

    <!-- Index to boost the search of profiles inside users -->
    <database-object>
        <create>CREATE INDEX idx_User_on_UserProfiles ON USER_PROFILES (USER_ID)</create>
        <drop>DROP INDEX idx_User_on_UserProfiles</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQLDialect" />
        <dialect-scope name="org.hibernate.dialect.MySQLInnoDBDialect" />
    </database-object>

</hibernate-mapping>
