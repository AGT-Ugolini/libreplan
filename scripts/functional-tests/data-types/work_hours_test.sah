/*
 * This file is part of NavalPlan
 *
 * Copyright (C) 2011 Igalia, S.L.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/* Included tests
 *
 * 1 - Create a new Work Hour
 * 2 - Create a Work Hour with duplicate name (it should be a failure)
 * 3 - Create a Work Hour with empty name (it should be a failure)
 * 4 - Edit a Work Hour
 * 5 - Assign a work Hour to a project with Work Report Model
 *   5.1  - Create a new Work Report Models
 *   5.2  - Create a new proyect
 *   5.3  - Create a new Machine
 *   5.4  - Create a new Work Report and assign our Work hour and Work Report Models
 *   5.5  - Try to delete the assigned Work Hour (it should be a failure)
 *   5.6  - Try to delete the assigned Work Report Models (it should be a failure)
 *   5.7  - Try to delete the project (it should be a failure)
 *   5.8  - Delete the Work Report
 *   5.9  - Delete the project
 *   5.10 - Delete the machine
 *   5.11 - Delete the work report model
 * 6 - Delete Work Hour
 * 7 - Check code
 *   7.1 - Change configuration
 *   7.2 - Try to create a new Work Hour without Code (it should be a failure)
 *   7.3 - Change configuration like before
 * 8 - Assign a work Hour to a Cost Category
 *   8.1 - Create a Work Hour again
 *   8.2 - Create a Cost Category and associate our Work Hour
 *   8.3 - Try to delete the Work Hour
 *   8.4 - Delete the Cost Category
 *   8.5 - Delete the Work Hour
*/
_include("../common_functions.sah");

function workHourCreateDuplicateType($type, $price){
    commonCreate("Work Hours");
    commonWorkHourForm($type, $price);
    workHourNotValid($type);
    _log("Do not allow create a duplicate Work Hour", "custom1");
}

function workHourCreateEmpty(){
    commonCreate("Work Hours");
    commonWorkHourForm("", 10);
    _assertExists(_div("cannot be null or empty"));
    _assert(_isVisible(_div("cannot be null or empty")));
    _log("Do not allow create a empty Work Hour", "custom1");
}

/* test to check a that naval plan give us a error */
function workHourNotValid($hWorkType){
    _assertExists(_span("checkConstraintUniqueName: the type of work hours name has to be unique. It is already used"));
    _assert(_isVisible(_span("checkConstraintUniqueName: the type of work hours name has to be unique. It is already used")));
}

function workHourEdit($oldName, $newName, $hWorkPrice, $cell) {
    commonEdit($oldName, $cell);
    commonWorkHourForm($newName, $hWorkPrice);
    commonSaveValidation("Type of hours", $newName);
    _log("Edit the Work Hour", "custom1");
}

function workHourAssign($hWorkNewName, $ModelName, $materialName, $materialDescription){
    commonWorkReportModelCreate($ModelName);
    commonCreateProject("new project");
    commonMachineCreate($materialName, $materialDescription);
    workReportCreate($materialName, "new project", $hWorkNewName);
    workHourTryDelete($hWorkNewName, "work report line");
    reportModelTryDelete($ModelName);
    commonTryDeleteProject("new project");
    commonDelete("Work Reports", $ModelName, 4);
    // Pending of a bug 1131
    // workReportDeleteValidation();
    commonDeleteProject("new project");
    commonMachineDelete($materialName);
    commonWorkReportModelDelete($ModelName);
    _log("Assign the work hour to project", "custom1");
}

function workHourTryDelete($hWorkNewName,$something){
    _click(_link("Work Hours"));
    _click(_image("ico_borrar1.png", _in(_cell(4, _near(_cell($hWorkNewName))))));
    _assertExists(_span("Cannot delete type of work hours. It is being used at this moment in some "+$something+"."));
    _assert(_isVisible(_span("Cannot delete type of work hours. It is being used at this moment in some "+$something+".")));
    _click(_cell("OK"));
    _log("Do not allow delete the Work Hour", "custom1");
}

function workHourCheckCode($workHourName){
    commonConfigurationChangeCheckboxMainPreferences("Types of work hours");
    workHourCreateWithoutCode($workHourName);
    commonConfigurationChangeCheckboxMainPreferences("Types of work hours");
    _log("Check code label", "custom1");
}

function workHourCreateWithoutCode($type){
    commonCreate("Work Hours");
    commonWorkHourForm($type);
    commonEmptyCodeValidation();
}

/*
 * Functions of Report Model
 * */

function reportModelTryDelete($ModelName){
    _click(_link("Work Report Models"));
    _click(_image("ico_borrar1.png", _in(_cell(1, _near(_cell($ModelName))))));
    _assertExists(_span("Cannot delete work report type. There are some work reports bound to it."));
    _assert(_isVisible(_span("Cannot delete work report type. There are some work reports bound to it.")));
    _click(_cell("OK"));
    _log("Do not allow delete Work Report Model", "custom1");
    }

/*
 * Functions of Work Report
 * */

function workReportCreate($wReport, $project, $workHour) {
    _click(_link("Work Reports"));
    workReportForm($wReport, $project, $workHour);
    _log("Create a Work Report", "custom1");
}

function workReportForm($machine, $project, $workHour) {
    _click(_cell("New work report"));
    _click(_cell("Add new row"));
    _setValue(_textbox(2, _near(_parentTable(_div("Date")))),$machine);
    _click(_italic(0, _near(_textbox(3, _near(_parentTable(_div("Date")))))));
    _click(_div($project+"[2]", _parentTable(_div("Project code[1]"))));
    _setValue(_textbox("z-intbox"),"8");
    _setSelected(_select(2), $workHour);
    _click(_cell("Save"));
    _assertExists(_div("Work report saved"));
    _assert(_isVisible(_div("Work report saved")));
}

function commonTryDeleteProject($name){
    _click(_link("Projects"));
    _click(_image("ico_borrar1.png", _in(_cell(8, _near(_cell($name))))));
    _click(_cell("OK"));
    _assertExists(_div("You can not remove the project \"new project\" because of any of its tasks are already in use in some work reports and the project just exists in the current scenario"));
    _assert(_isVisible(_div("You can not remove the project \"new project\" because of any of its tasks are already in use in some work reports and the project just exists in the current scenario")));
    _log("Do not allow delete Work Report", "custom1");
}

/*
 * Functions of Cost Category
 * */

function workHourAssignCostCategory($categoryName, $hworkName){
    commonCostCategoryCreate($categoryName, $hworkName);
    workHourTryDelete($hWorkName,"cost category");
    commonCostCategoryDelete($categoryName);
    _log("Assign to a Cost Category", "custom1");
}

/* test values */
var $hWorkName = "new";
var $hWorkNewName = "newest";
var $hWorkPrice = "20";
var $ModelName = "newModel";
var $cCategoryName = "newModel";
var $materialName = "newMachine";
var $materialDescription = "strongeMachine";

/* test actions */
commonLogin("admin", "admin");

commonWorkHourCreate($hWorkName, $hWorkPrice);
workHourCreateDuplicateType($hWorkName, $hWorkPrice);
workHourCreateEmpty();
workHourEdit($hWorkName, $hWorkNewName, $hWorkPrice, 4);
workHourAssign($hWorkNewName, $ModelName, $materialName, $materialDescription);
workHourCheckCode($hWorkName);
commonWorkHourDelete($hWorkNewName);
commonWorkHourCreate($hWorkName, $hWorkPrice);
workHourAssignCostCategory($cCategoryName, $hWorkName);
commonWorkHourDelete($hWorkName);

commonLogout();
