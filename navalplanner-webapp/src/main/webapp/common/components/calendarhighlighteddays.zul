<zk xmlns:n="http://www.zkoss.org/2005/zk/native">


<n:script src="http://yui.yahooapis.com/2.7.0/build/yahoo/yahoo-min.js" />
<n:script src="http://yui.yahooapis.com/2.7.0/build/selector/selector-min.js" />


<n:script language="javascript">
<![CDATA[

Array.prototype.in_array = function(p_val) {
    for(var i = 0, l = this.length; i < l; i++) {
        if(this[i] == p_val) {
            return true;
        }
    }
    return false;
}

function cleanHighlightedDays() {
    var candidates = document.getElementsByTagName("td");
    var nodes = YAHOO.util.Selector.filter(candidates, "[zk_day]");

    for (var i = 0; i < nodes.length; i++) {
        var month = nodes[i].getAttribute("zk_monofs");

        if (month == 0) {
            nodes[i].removeAttribute("style");
        } else {
            nodes[i].setAttribute("style", "color:lightgrey;background-color:white");
        }
    }
}

function highlightDays(ancestorExceptionDays, ancestorExceptionColor, ancestorExceptionBgColor,
        ownExceptionDays, ownExceptionColor, ownExceptionBgColor,
        zeroHoursDays, zeroHoursColor, zeroHoursBgColor,
        outOfMonthColor, outOfMonghBgColor) {

    var candidates = document.getElementsByTagName("td");
    var nodes = YAHOO.util.Selector.filter(candidates, "[zk_day]");

    var ancestorExceptions = ancestorExceptionDays.split(",");
    var ownExceptions = ownExceptionDays.split(",");
    var zeroHours = zeroHoursDays.split(",");

    for (var i = 0; i < nodes.length; i++) {
        var month = nodes[i].getAttribute("zk_monofs");

        if (month == 0) {
            var day = nodes[i].getAttribute("zk_day");

            if (zeroHours.in_array(day)) {
                nodes[i].setAttribute("style",
                        "color:" + zeroHoursColor + ";background-color:" + zeroHoursBgColor);
            } else if (ownExceptions.in_array(day)) {
                nodes[i].setAttribute("style",
                        "color:" + ownExceptionColor + ";background-color:" + ownExceptionBgColor);
            } else if (ancestorExceptions.in_array(day)) {
                nodes[i].setAttribute("style",
                        "color:" + ancestorExceptionColor + ";background-color:" + ancestorExceptionBgColor);
            } else {
                nodes[i].removeAttribute("style");
            }
        } else {
            nodes[i].setAttribute("style",
                    "color:" + outOfMonthColor + ";background-color:" + outOfMonghBgColor);
        }
    }

}

]]>
</n:script>


<calendar value="@{self.parent.internalValue}" />


</zk>