/*
 * This file is part of LibrePlan
 *
 * Copyright (C) 2012 Igalia, S.L.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.libreplan.business.resources.entities;

import org.libreplan.business.calendars.entities.CalendarData.Days;
import org.libreplan.business.calendars.entities.Capacity;
import org.libreplan.business.calendars.entities.ResourceCalendar;
import org.libreplan.business.common.daos.IConfigurationDAO;
import org.libreplan.business.common.daos.IEntitySequenceDAO;
import org.libreplan.business.common.entities.EntityNameEnum;
import org.libreplan.business.resources.daos.IResourceDAO;
import org.libreplan.business.workingday.EffortDuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Creates a default {@link Resource} for LibrePlan Audiovisual with maximum
 * availability.
 *
 * @author Manuel Rego Casasnovas <rego@igalia.com>
 */
@Component
@Scope("singleton")
public class ResourcesBootstrap implements IResourcesBootstrap {

    @Autowired
    private IConfigurationDAO configurationDAO;

    @Autowired
    private IResourceDAO resourceDAO;

    @Autowired
    private IEntitySequenceDAO entitySequenceDAO;

    @Override
    @Transactional
    public void loadRequiredData() {
        if (resourceDAO.findAll().isEmpty()) {
            for (PredefinedResources resource : PredefinedResources.values()) {
                createAndSaveResource(resource);
            }
        }
    }

    /**
     * LibrePlan Audiovisual
     *
     * Special calendar with maximum capacity for the only resource in LibrePlan
     * Audiovisual.
     */
    private ResourceCalendar getSpecialResourceCalendar() {
        ResourceCalendar calendar = configurationDAO.getConfiguration()
                .getDefaultCalendar().newDerivedResourceCalendar();

        Capacity twentyFourHours = Capacity.create(EffortDuration.hours(24))
                .overAssignableWithoutLimit();
        calendar.setCapacityAt(Days.MONDAY, twentyFourHours);
        calendar.setCapacityAt(Days.TUESDAY, twentyFourHours);
        calendar.setCapacityAt(Days.WEDNESDAY, twentyFourHours);
        calendar.setCapacityAt(Days.THURSDAY, twentyFourHours);
        calendar.setCapacityAt(Days.FRIDAY, twentyFourHours);
        calendar.setCapacityAt(Days.SATURDAY, twentyFourHours);
        calendar.setCapacityAt(Days.SUNDAY, twentyFourHours);

        return calendar;
    }

    private void createAndSaveResource(PredefinedResources predefinedResource) {
        Resource resource = predefinedResource.getResource();
        resource.setCodeAutogenerated(true);
        resource.setCode(entitySequenceDAO
                .getNextEntityCodeWithoutTransaction(EntityNameEnum.WORKER));
        resource.setCalendar(getSpecialResourceCalendar());
        resourceDAO.save(resource);
    }

}
